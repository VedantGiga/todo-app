### Project Structure
Let's assume we have a basic React project structure. We'll create the following components:

```bash
src/
components/
Login.js
Input.js
Button.js
App.js
index.js
```

### Login.js
This will be our main login component. We'll use the `useState` hook to manage the form data and validation.

```jsx
// src/components/Login.js
import React, { useState } from 'react';
import Input from './Input';
import Button from './Button';

const Login = () => {
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');
  const [errors, setErrors] = useState({});

  const validate = (username, password) => {
    const errors = {};

    if (!username) {
      errors.username = 'Username is required';
    }

    if (!password) {
      errors.password = 'Password is required';
    }

    return errors;
  };

  const handleSubmit = (e) => {
    e.preventDefault();

    const errors = validate(username, password);

    if (Object.keys(errors).length > 0) {
      setErrors(errors);
    } else {
      console.log('Form submitted successfully!');
    }
  };

  return (
    <div className="login-container">
      <h1>Login</h1>
      <form onSubmit={handleSubmit}>
        <Input
          type="text"
          label="Username"
          value={username}
          onChange={(e) => setUsername(e.target.value)}
          error={errors.username}
        />
        <Input
          type="password"
          label="Password"
          value={password}
          onChange={(e) => setPassword(e.target.value)}
          error={errors.password}
        />
        <Button type="submit">Login</Button>
      </form>
      {Object.keys(errors).length > 0 && (
        <ul className="errors">
          {Object.values(errors).map((error, index) => (
            <li key={index}>{error}</li>
          ))}
        </ul>
      )}
    </div>
  );
};

export default Login;
```

### Input.js
This will be a reusable input component.

```jsx
// src/components/Input.js
import React from 'react';

const Input = ({ type, label, value, onChange, error }) => {
  return (
    <div className="input-container">
      <label>{label}</label>
      <input type={type} value={value} onChange={onChange} />
      {error && <p className="error">{error}</p>}
    </div>
  );
};

export default Input;
```

### Button.js
This will be a reusable button component.

```jsx
// src/components/Button.js
import React from 'react';

const Button = ({ children, type, onClick }) => {
  return (
    <button type={type} onClick={onClick}>
      {children}
    </button>
  );
};

export default Button;
```

### App.js
This is our main application component. We'll render the login component here.

```jsx
// src/App.js
import React from 'react';
import Login from './components/Login';

const App = () => {
  return <Login />;
};

export default App;
```

### index.js
This is our main entry point. We'll render the App component here.

```jsx
// src/index.js
import React from 'react';
import ReactDOM from 'react-dom';
import App from './App';

ReactDOM.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>,
  document.getElementById('root')
);
```

This is a basic example of how you can structure your login page using React components. You can customize the styles and layout as per your requirements.

### CSS
You can add the following CSS to your project to style the login page:

```css
/* src/index.css */
.login-container {
  max-width: 400px;
  margin: 40px auto;
  padding: 20px;
  border: 1px solid #ddd;
  border-radius: 10px;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
}

.input-container {
  margin-bottom: 20px;
}

.input-container label {
  display: block;
  margin-bottom: 10px;
}

.input-container input {
  width: 100%;
  height: 40px;
  padding: 10px;
  border: 1px solid #ccc;
  border-radius: 5px;
}

.input-container .error {
  color: #f00;
  font-size: 12px;
  margin-top: 5px;
}

.button {
  background-color: #4CAF50;
  color: #fff;
  padding: 10px 20px;
  border: none;
  border-radius: 5px;
  cursor: pointer;
}

.button:hover {
  background-color: #3e8e41;
}

.errors {
  list-style: none;
  padding: 0;
  margin: 0;
  color: #f00;
}
```

You can import this CSS file in your `index.js` file:

```jsx
import React from 'react';
import ReactDOM from 'react-dom';
import App from './App';
import './index.css'; // Import CSS file

ReactDOM.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>,
  document.getElementById('root')
);
```